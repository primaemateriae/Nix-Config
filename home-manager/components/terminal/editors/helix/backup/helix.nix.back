{ config, pkgs, lib, inputs, ... }:
let
  languages = {
    markdown = import ./languages/markdown.nix { inherit pkgs; };
    toml = import ./languages/toml.nix { inherit pkgs; };
    nix = import ./languages/nixlang.nix { inherit pkgs; };

    # Extract all packages
    allPackages = lib.flatten (lib.mapAttrsToList (_: lang: lang.packages) languages);
  
    # Extract all language configurations
    allLanguages = lib.mapAttrsToList (_: lang: lang.language) languages;
  
    # Merge all language servers
    allServers = lib.mkMerge (lib.mapAttrsToList (_: lang: lang.servers or {}) languages);
  };
in
{
  home.packages = with pkgs; [
    # dprint
    # markdown-oxide  
    # marksman
    # ltex-ls
  ];
  
  # Helix editor configuration
  programs.helix = {
    enable = true;
    defaultEditor = true;

    # Main configuration
    settings = {
      theme = "catppuccin_transparant";

      editor = {
        line-number = "absolute";
        # line-number = "relative";
        text-width = 200;
        rulers = [201];
        auto-completion = true;
        auto-format = true;
        auto-pairs = true;
        cursorline = true;
        cursorcolumn = true;
        undercurl = true;
        completion-trigger-len = 2;
        color-modes = true;
        scrolloff = 5;
        mouse = true;
        middle-click-paste = true;

        cursor-shape = {
          insert = "bar";
          normal = "block";
          select = "underline";
        };

        indent-guides = {
          render = true;
          character = "â”‚";
          skip-levels = 0;
        };

        lsp = {
          display-inlay-hints = true;
          display-messages = true;
          auto-signature-help = true;
        };

        inline-diagnostics = {
          cursor-line = "hint";
        };

        statusline = {
          left = ["mode" "spinner" "file-name" "file-modification-indicator"];
          center = ["diagnostics" "workspace-diagnostics"];
          right = ["selections" "position" "position-percentage" "file-encoding"];
          mode = {
            normal = "NAVIGATION";
            insert = "AMENDATION";
            select = "VSELECTION ";
          };
        };

        file-picker = {
          hidden = false;
          parents = true;
          ignore = true;
          git-ignore = true;
          git-global = true;
          git-exclude = true;
          max-depth = 10;
        };

        search = {
          smart-case = true;
        };
      };

      keys = {
        normal = {
          # Swap Line Functionality. Critical for me.
          "A-up"   = ["extend_to_line_bounds" "delete_selection" "move_line_up" "paste_before"];
          "A-down" = ["extend_to_line_bounds" "delete_selection" "paste_after"];
        };

        insert = {
          # Swap Line Functionality. Critical for me.
          "A-up"   = ["normal_mode" "extend_to_line_bounds" "delete_selection" "move_line_up" "paste_before" "insert_mode"];
          "A-down" = ["normal_mode" "extend_to_line_bounds" "delete_selection" "paste_after" "insert_mode"];
        };

        select = {
          # Swap Line Functionality. Critical for me.
          "A-up"   = ["normal_mode" "extend_to_line_bounds" "delete_selection" "move_line_up" "paste_before" "select_mode"];
          "A-down" = ["normal_mode" "extend_to_line_bounds" "delete_selection" "paste_after" "select_mode"];
        };
      };
    };

    # Language configuration

    extraPackages = with pkgs; [
      # marksman
      markdown-oxide

      taplo
      dprint
    ];
    languages = {
      language = [{
        name = "markdown";
        scope = "source.md";
        injection-regex = "md|markdown";
        file-types = ["md" "markdown"];
        roots = [".markdown-oxide.toml"];
        language-servers = [ "markdown-oxide" ];
        formatter = {
          command = "${pkgs.dprint}/bin/dprint";
          args = ["fmt" "--stdin" "md"];
        };        
        auto-format = true;
        indent = {
          tab-width = 4;
          unit = " ";
        };
        comment-tokens = ["-" "+" "*" "1." ">" "- [ ]"]; # Some extra tokens added here to facilitate easy editing, such as `*` for bullet lists.
        auto-pairs = {
          # "`" = "`";
        };
      }];

      language-server.markdown-oxide = {
        command = "markdown-oxide";
      };

      # language = [{
      #   name = "toml";
      #   language-servers = ["taplo"];
      #   formatter = {
      #     command = "taplo";
      #     args = ["fmt" "-"];
      #   };
      #   auto-format = true;
      # }];
      # language-server.taplo = {
      #   command = "taplo";
      #   args = ["lsp" "stdio"];
      # };
    
    #   language = [{
    #     name = "rust";
    #     scope = "source.rust";
    #     injection-regex = "rs|rust";
    #     file-types = ["rs"];
    #     roots = ["Cargo.toml" "Cargo.lock"];
    #     shebangs = ["rust-script" "cargo"];
    #     auto-format = true;
    #     comment-tokens = ["//" "///" "//!"];
    #     block-comment-tokens = [
    #       { start = "/*"; end = "*/"; }
    #       { start = "/**"; end = "*/"; }
    #       { start = "/*!"; end = "*/"; }
    #     ];
    #     formatter = { command = "rustfmt"; };
    #     indent = { tab-width = 4; unit = "    "; };
    #     persistent-diagnostic-sources = ["rustc" "clippy"];
    #     auto-pairs = {
    #       "(" = ")";
    #       "{" = "}";
    #       "[" = "]";
    #       "<" = ">";
    #       "\"" = "\"";
    #     };
    #   }];

    #   language-server.rust-analyzer = {
    #     command = "rust-analyzer";
    #     config = {
    #       inlayHints = {
    #         bindingModeHints.enable = false;
    #         closingBraceHints.minLines = 10;
    #         closureReturnTypeHints.enable = "with_block";
    #         discriminantHints.enable = "fieldless";
    #         lifetimeElisionHints.enable = "skip_trivial";
    #         typeHints.hideClosureInitialization = false;
    #       };
    #       check = {
    #         command = "clippy";
    #       };
    #     };
    #   };
    };

    # Theme configuration
    themes = {
      catppuccin_transparant = {
        # Palette
        palette = {
          rosewater                         = "#f5e0dc";
          flamingo                          = "#f2cdcd";
          pink                              = "#f5c2e7";
          mauve                             = "#cba6f7";
          red                               = "#f38ba8";
          maroon                            = "#eba0ac";
          peach                             = "#fab387";
          yellow                            = "#f9e2af";
          green                             = "#a6e3a1";
          teal                              = "#94e2d5";
          sky                               = "#89dceb";
          sapphire                          = "#74c7ec";
          blue                              = "#89b4fa";
          lavender                          = "#b4befe";
          text                              = "#cdd6f4";
          subtext1                          = "#bac2de";
          subtext0                          = "#a6adc8";
          overlay2                          = "#9399b2";
          overlay1                          = "#7f849c";
          overlay0                          = "#6c7086";
          surface2                          = "#585b70";
          surface1                          = "#45475a";
          surface0                          = "#313244";
          base                              = "#1e1e2e";
          mantle                            = "#181825";
          crust                             = "#11111b";

          secondary_cursor                  = "#b5a6a8";
          secondary_cursor_normal           = "#b5a6a8";
          secondary_cursor_insert           = "#7ea87f";
          anomaly                           = "#ff00ff";
          anti_anomaly                      = "#00ff00";

          cursorline                        = "#2a2b3c";
          cursorcolumn                      = "#2a2b3c";
        };

        # Syntax highlighting
        "attribute"                         = "yellow";
        "type"                              = "yellow";
        "type.enum.variant"                 = "teal";
        "constructor"                       = "sapphire";
        "constant"                          = "peach";
        "constant.character"                = "teal";
        "constant.character.escape"         = "pink";
        "string"                            = "green";
        "string.regexp"                     = "pink";
        "string.special"                    = "blue";
        "string.special.symbol"             = "red";
        "comment"                           = { fg = "overlay2";                                         modifiers = ["italic"]; };
        "variable"                          = "text";
        "variable.parameter"                = { fg = "maroon";                                           modifiers = ["italic"]; };
        "variable.builtin"                  = "red";
        "variable.other.member"             = "blue";
        "label"                             = "sapphire";
        "punctuation"                       = "overlay2";
        "punctuation.special"               = "sky";
        "keyword"                           = "mauve";
        "keyword.control.conditional"       = { fg = "mauve";                                            modifiers = ["italic"]; };
        "operator"                          = "sky";
        "function"                          = "blue";
        "function.macro"                    = "mauve";
        "tag"                               = "blue";
        "namespace"                         = { fg = "yellow";                                           modifiers = ["italic"]; };
        "special"                           = "blue";

        # Markup
        "markup.heading.1"                  = "red";
        "markup.heading.2"                  = "peach";
        "markup.heading.3"                  = "yellow";
        "markup.heading.4"                  = "green";
        "markup.heading.5"                  = "sapphire";
        "markup.heading.6"                  = "lavender";
        "markup.list"                       = "teal";
        "markup.list.unchecked"             = "overlay2";
        "markup.list.checked"               = "green";
        "markup.bold"                       = { fg = "red";                                              modifiers = ["bold"]; };
        "markup.italic"                     = { fg = "red";                                              modifiers = ["italic"]; };
        "markup.link.url"                   = { fg = "blue";                                             modifiers = ["italic" "underlined"]; };
        "markup.link.text"                  = "lavender";
        "markup.link.label"                 = "sapphire";
        "markup.raw"                        = "green";
        "markup.quote"                      = "pink";

        # Diff
        "diff.plus"                         = "green";
        "diff.minus"                        = "red";
        "diff.delta"                        = "blue";

        # UI
        "ui.background"                     = {}; # Transparent 
        "ui.linenr"                         = { fg = "surface1"; };
        "ui.linenr.selected"                = { fg = "lavender"; };
        "ui.statusline"                     = { fg = "subtext1";      bg = "mantle"; };
        "ui.statusline.inactive"            = { fg = "surface2";      bg = "mantle"; };
        "ui.statusline.normal"              = { fg = "base";          bg = "rosewater";                  modifiers = ["bold"]; };
        "ui.statusline.insert"              = { fg = "base";          bg = "green";                      modifiers = ["bold"]; };
        "ui.statusline.select"              = { fg = "base";          bg = "lavender";                   modifiers = ["bold"]; };
        "ui.popup"                          = { fg = "text";          bg = "surface0"; };
        "ui.window"                         = { fg = "crust"; };
        "ui.help"                           = { fg = "overlay2";      bg = "surface0"; };
        "ui.bufferline"                     = { fg = "subtext0";      bg = "mantle"; };
        "ui.bufferline.active"              = { fg = "mauve";         bg = "base";                                                               underline = { color = "mauve"; style = "line"; }; };
        "ui.bufferline.background"          = { bg = "crust"; };
        "ui.text"                           = "text";
        "ui.text.focus"                     = { fg = "text";          bg = "surface0";                   modifiers = ["bold"]; };
        "ui.text.inactive"                  = { fg = "overlay1"; };
        "ui.text.directory"                 = { fg = "blue"; };
        "ui.virtual"                        = "overlay0";
        "ui.virtual.ruler"                  = { bg = "surface0"; };
        "ui.virtual.indent-guide"           = "surface0";
        "ui.virtual.inlay-hint"             = { fg = "surface1";      bg = "mantle"; };
        "ui.virtual.inlay-hint.parameter"   = { fg = "surface1";      bg = "mantle"; };
        "ui.virtual.inlay-hint.type"        = { fg = "surface1";      bg = "mantle"; };
        "ui.virtual.jump-label"             = { fg = "rosewater";                                        modifiers = ["bold"]; };
        "ui.selection"                      = { bg = "surface1"; };
        "ui.cursor"                         = { fg = "anti_anomaly";  bg = "anomaly"; };
        "ui.cursor.primary"                 = { fg = "anti_anomaly";  bg = "anomaly"; };
        "ui.cursor.match"                   = { fg = "peach";                                            modifiers = ["bold"]; };
        "ui.cursor.primary.normal"          = { fg = "anti_anomaly";  bg = "anomaly"; };
        "ui.cursor.primary.insert"          = { fg = "base";          bg = "green"; };
        "ui.cursor.primary.select"          = { fg = "base";          bg = "lavender"; };
        "ui.cursor.normal"                  = { fg = "base";          bg = "secondary_cursor_normal"; };
        "ui.cursor.insert"                  = { fg = "base";          bg = "secondary_cursor_insert"; };
        "ui.cursor.select"                  = { fg = "base";          bg = "secondary_cursor"; };
        "ui.cursorline.primary"             = { bg = "cursorline"; };
        "ui.cursorcolumn.primary"           = { bg = "cursorline"; };
        # "ui.cursor"                       = { fg = "base";          bg = "secondary_cursor"; };
        # "ui.cursor.primary"               = { fg = "base";          bg = "rosewater"; };
        # "ui.cursor.primary.normal"        = { fg = "base";          bg = "rosewater"; };
        "ui.highlight"                      = { bg = "surface1";                                         modifiers = ["bold"]; };
        "ui.menu"                           = { fg = "overlay2";      bg = "surface0"; };
        "ui.menu.selected"                  = { fg = "text";          bg = "surface1";                   modifiers = ["bold"]; };

        # Diagnostics
        "diagnostic.error"                  = {                                                                                                  underline = { color = "red";    style = "curl"; }; };
        "diagnostic.warning"                = {                                                                                                  underline = { color = "yellow"; style = "curl"; }; };
        "diagnostic.info"                   = {                                                                                                  underline = { color = "sky";    style = "curl"; }; };
        "diagnostic.hint"                   = {                                                                                                  underline = { color = "teal";   style = "curl"; }; };
        "diagnostic.unnecessary"            = {                                                          modifiers = ["dim"]; };
        error                               = "red";
        warning                             = "yellow";
        info                                = "sky";
        hint                                = "teal";

      };
    };
  };

  # Create a default dprint configuration
  home.file.".dprint.json".text = builtins.toJSON {
    "$schema" = "https://dprint.dev/schemas/v0.json";

    # REQUIRED: Specify plugins
    plugins = [
      "https://plugins.dprint.dev/markdown-0.17.8.wasm"
      "https://plugins.dprint.dev/json-0.19.3.wasm"
      "https://plugins.dprint.dev/toml-0.6.3.wasm"
    ];

    incremental = true; # Global config

    # Markdown Config
    markdown = {
      # Line width
      lineWidth = 200;
      textWrap = "always";
    
      # Formatting options
      emphasisKind = "asterisks";                   # Use * for italic
      strongKind = "asterisks";                     # Use ** for bold
    
      # List formatting
      unorderedListKind = "dashes";                 # Use - for lists
    
      # Ignore directives
      ignoreDirective = "dprint-ignore";
      ignoreStartDirective = "dprint-ignore-start";
      ignoreEndDirective = "dprint-ignore-end";
    };

    # JSON Config 
    json = {
      lineWidth = 200;
      indentWidth = 2;
      useTabs = true;
    };
  
    # Include/exclude patterns
    includes = ["**/*.md" "**/*.markdown"];
    excludes = [
      "**/node_modules"
      "**/.git"
      "**/target"
      "**/dist"
      "**/*.min.json"
    ];
  };
}
